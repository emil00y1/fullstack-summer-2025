stages:
  - test
  - build
  - deploy

test:
  stage: test
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - apk add --no-cache docker-compose
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker-compose up --build -d
    - sleep 60
    - CONTAINER_ID=$(docker-compose ps -q)
    - docker exec $CONTAINER_ID npm install
    - docker exec $CONTAINER_ID npm test
  after_script:
    - docker-compose down

build:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
  after_script:
    - docker logout

deploy:
  stage: deploy
  image: node:latest
  before_script:
    - npm install -g vercel
  script:
    - vercel pull --yes --environment=production --token=$VERCEL_TOKEN
    - vercel build --token=$VERCEL_TOKEN
    - vercel deploy --prebuilt --token=$VERCEL_TOKEN
  environment:
    name: production
  only:
    - main
